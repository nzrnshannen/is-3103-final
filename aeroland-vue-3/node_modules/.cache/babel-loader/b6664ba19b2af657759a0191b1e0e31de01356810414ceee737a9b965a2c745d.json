{"ast":null,"code":"import \"core-js/modules/es.math.trunc.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  props: {\n    deadline: {\n      type: String,\n      \"default\": \"october 31, 2023\"\n    }\n  },\n  data: function data() {\n    return {\n      now: Math.trunc(new Date().getTime() / 1000)\n    };\n  },\n  computed: {\n    dateInMilliseconds: function dateInMilliseconds() {\n      return Math.trunc(Date.parse(this.deadline) / 1000);\n    },\n    seconds: function seconds() {\n      var sec = (this.dateInMilliseconds - this.now) % 60;\n      return \"\".concat(sec).padStart(2, \"0\");\n    },\n    minutes: function minutes() {\n      var min = Math.trunc((this.dateInMilliseconds - this.now) / 60) % 60;\n      return \"\".concat(min).padStart(2, \"0\");\n    },\n    hours: function hours() {\n      var hrs = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60) % 24;\n      return \"\".concat(hrs).padStart(2, \"0\");\n    },\n    days: function days() {\n      var day = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60 / 24);\n      return \"\".concat(day).padStart(2, \"0\");\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    setInterval(function () {\n      _this.now = Math.trunc(new Date().getTime() / 1000);\n    }, 1000);\n  }\n};","map":{"version":3,"mappings":";;;;AAqBA,eAAe;EACdA,KAAK,EAAE;IACNC,QAAQ,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZ,WAAS;IACV;EACD,CAAC;EAEDC,IAAI,kBAAG;IACN,OAAO;MACNC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAC,GAAI,IAAI;IAC5C,CAAC;EACF,CAAC;EAEDC,QAAQ,EAAE;IACTC,kBAAkB,gCAAG;MACpB,OAAOL,IAAI,CAACC,KAAK,CAACC,IAAI,CAACI,KAAK,CAAC,IAAI,CAACX,QAAQ,IAAI,IAAI,CAAC;IACpD,CAAC;IACDY,OAAO,qBAAG;MACT,IAAMC,GAAE,GAAI,CAAC,IAAI,CAACH,kBAAiB,GAAI,IAAI,CAACN,GAAG,IAAI,EAAE;MACrD,OAAO,UAAGS,GAAG,EAAGC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjC,CAAC;IACDC,OAAO,qBAAG;MACT,IAAMC,GAAE,GAAIX,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAACI,kBAAiB,GAAI,IAAI,CAACN,GAAG,IAAI,EAAE,IAAI,EAAE;MACtE,OAAO,UAAGY,GAAG,EAAGF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjC,CAAC;IACDG,KAAK,mBAAG;MACP,IAAMC,GAAE,GAAIb,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAACI,kBAAiB,GAAI,IAAI,CAACN,GAAG,IAAI,EAAC,GAAI,EAAE,IAAI,EAAE;MAC3E,OAAO,UAAGc,GAAG,EAAGJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjC,CAAC;IACDK,IAAI,kBAAG;MACN,IAAMC,GAAE,GAAIf,IAAI,CAACC,KAAK,CAAC,CAAC,IAAI,CAACI,kBAAiB,GAAI,IAAI,CAACN,GAAG,IAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC;MAC3E,OAAO,UAAGgB,GAAG,EAAGN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACjC;EACD,CAAC;EACDO,OAAO,qBAAG;IAAA;IACTC,WAAW,CAAC,YAAM;MACjB,KAAI,CAAClB,GAAE,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAC,GAAI,IAAI,CAAC;IACnD,CAAC,EAAE,IAAI,CAAC;EACT;AACD,CAAC","names":["props","deadline","type","String","data","now","Math","trunc","Date","getTime","computed","dateInMilliseconds","parse","seconds","sec","padStart","minutes","min","hours","hrs","days","day","mounted","setInterval"],"sourceRoot":"","sources":["C:\\Users\\Shannen Nazareno\\OneDrive - usc.edu.ph\\Desktop\\is-3103-final\\aeroland-vue-3\\src\\components\\Countdown.vue"],"sourcesContent":["<template>\r\n\t<div class=\"box-timer\">\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ days }}</span>\r\n\t\t\t<span class=\"count-format\">Days</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ hours }}</span>\r\n\t\t\t<span class=\"count-format\">Hours</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ minutes }}</span>\r\n\t\t\t<span class=\"count-format\">Minutes</span>\r\n\t\t</div>\r\n\t\t<div class=\"single-count\">\r\n\t\t\t<span class=\"count-timer\">{{ seconds }}</span>\r\n\t\t\t<span class=\"count-format\">Seconds</span>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n\tprops: {\r\n\t\tdeadline: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: \"october 31, 2023\",\r\n\t\t},\r\n\t},\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tnow: Math.trunc(new Date().getTime() / 1000),\r\n\t\t};\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tdateInMilliseconds() {\r\n\t\t\treturn Math.trunc(Date.parse(this.deadline) / 1000);\r\n\t\t},\r\n\t\tseconds() {\r\n\t\t\tconst sec = (this.dateInMilliseconds - this.now) % 60;\r\n\t\t\treturn `${sec}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\tminutes() {\r\n\t\t\tconst min = Math.trunc((this.dateInMilliseconds - this.now) / 60) % 60;\r\n\t\t\treturn `${min}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\thours() {\r\n\t\t\tconst hrs = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60) % 24;\r\n\t\t\treturn `${hrs}`.padStart(2, \"0\");\r\n\t\t},\r\n\t\tdays() {\r\n\t\t\tconst day = Math.trunc((this.dateInMilliseconds - this.now) / 60 / 60 / 24);\r\n\t\t\treturn `${day}`.padStart(2, \"0\");\r\n\t\t},\r\n\t},\r\n\tmounted() {\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.now = Math.trunc(new Date().getTime() / 1000);\r\n\t\t}, 1000);\r\n\t},\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}